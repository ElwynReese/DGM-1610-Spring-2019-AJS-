{\rtf1\ansi\ansicpg1252\deff0\nouicompat\deflang1033\deflangfe1033{\fonttbl{\f0\fmodern\fprq1\fcharset0 Courier New;}}
{\*\generator Riched20 10.0.17134}{\*\mmathPr\mdispDef1\mwrapIndent1440 }\viewkind4\uc1 
\pard\nowidctlpar\f0\fs22 Intro to Scripting DGM1610 \par
\par
To-Do List (As of Mar5):\par
1. Catch up with Anthony\rquote s Wednesday Video\par
2. \par
3.\par
4.\par
5.\par
\par
\par
Mar 25th, 2019\par
\par
-New C# script 'FunctionsWithParams'\par
-Start and update have no params in this function.\par
-private void adddata (float a, float b)\par
-above float a is a parameter\par
-void start ()\par
\{\par
AddData (12.5f, 8.5f);\par
\}\par
\par
-a=12.5, b=8.5f\par
-print(a+b);\par
-More code as a snippit in Repo-Docs.\par
-\par
\par
Mar 11th, 2019\par
\par
-Everything is private unless you put the word public in front of it.\par
-If something is private, only the class can use it.\par
-public is visible anywhere.\par
-protected variables/functions are private to outside classes, but public to children.\par
-Event.Invoke, when public, will show up in the inspector as something which can be assigned.\par
-return means 'give back'.\par
-void is useful because it doesn't return anything.\par
-Went over return functions today. We used an example of a character controller that can determine it's own position. This is useful for required position data, "Heat seeking missile."\par
-Talked a little about GUI and rect transform.\par
-The end of the stream shows a functioning health bar.\par
-\par
\par
Mar 6th, 2019\par
\par
-Need to make health, ammo, stamina, etc.\par
-FloatData is also something I'm missing.\par
-Only Items in a scene can use the scriptable object.\par
-We went over 'ammo' today.\par
-\par
\par
Mar 4th, 2019\par
\par
-Next C# script to finish the new character controller is MoveAxis. We are working with abstracts. \par
-CreateAssetMenu in MoveBase\par
-\par
\par
Feb 27th, 2019\par
\par
-Went over light switch functionality before I got to class. First 10 minutes I missed.\par
-OnEvent.Invoke();\par
-OffEvent.Invoke();\par
-Through use of OnBool variable, the event.invoke function works to turn on the light switch.\par
-public UnityEvent OnEvent, OffEvent;\par
-Light intensity can be a variable in the On/Off event just as easily as brightness, or on/off itself.\par
-Character controller component was introduced. It's already a part of Unity. It is a seperate system from physics. You can not name any additional scripts CharacterController or they will override the default unity class.\par
-\par
\par
Feb 26\super th\nosupersub , 2019\par
\par
-Today while working on Project Krypt, I ran into a script as component error. The compiler was running into an error in a different script that was preventing the assembly code from connecting the script to the game object. This says to me that connecting scripts to game objects is a compiler process. In the future, I need to make sure that I finish whatever I\rquote m working on at the time (to the point where there are no compiler errors) before I start on the next task.\par
\par
Feb 25th, 2019\par
\par
-conditionals must go inside a function.\par
-if requires an expression.\par
-bools will default to false, you must state that it is true.\par
- if (CanWalk) simply determines if the bool 'CanWalk' is true.\par
- Exclamation point (!) flags anything as false if you put it before a variable or symbol.\par
-Unless you explicitly write a variable in as a number, it will initialize with a value of 0.\par
-\par
\par
Feb 20th, 2019\par
\par
-OnEnable\par
-ScriptableObject\par
-IsTrigger needs to be on in order to use the mouse to interact with the item.\par
-void is the same as function\par
-MonoEvents\par
-Its good practice to declare public/private/protected in front in front of void(s).\par
-The game generally can only be tested in the game view.\par
-Covered Events, Events allow your game to progress.\par
-Persistent editor behaviour.\par
-"Ran into a namespace issue with the PowerUpBase, Main folder?"\par
\par
Feb 14th, 2019\par
\par
-Main Camera: Camera, Audio Listener, Position\par
-Directional Light: \par
-Seems mostly like he was talking about inheritance and UI functions. (I'm going to pool other information with regard to the lecture and Contact Anthony about directives, the sound wasn't working.)\par
\par
Feb 11th, 2019 \par
\par
- Ints, strings, and Data Types\par
\par
-Every time we make a new script/class, we make a new data type.\par
\par
-Hardcoded scripts are uneditable by the engine.\par
\par
-Reviewed script component adding. This makes the class object instanced.\par
\par
-float is short for floating point value. Good for things like a variable velocity. Floats are really hard to calculate/\par
\par
-Red squiggly line = error when coding.\par
\par
-Doubles aren't used often in game design because the accuracy is typically not needed. Best practice is to not use them.\par
\par
- public bool CanMove; (Bools are really cheap resourcewise.)\par
\par
- public int FurCount = 10000;\par
\par
- public float EatingSpeed = 0.4f;\par
\par
- public bool CanEat = True;\par
\par
-Floats only need to be declared in the script, not in the component menu.\par
\par
- public UnityEvent Event; (JetBrains Rider will autocomplete prerequisite code.)\par
\par
-\par
void Start()\par
\{\par
Event.Invoke();\par
\}\par
\par
\par
-The above script when connected together and modyfied in unity was used to invoke a 'setactive' function. This made the mammal cube disappear when the game started.\par
\par
-A threaded pipe is a tight coupling.\par
-PVC pipe put together without thought or plan is like a loose coupling.\par
\par
\par
-\par
\par
Feb 6th, 2019\par
\par
\par
\par
-Review: Classes, Scripts including start and update.\par
\par
-Right click in project view to create C# script.\par
\par
-Project files must always be one word and be composed of CamelCasing\par
\par
-Erroneous scripts will cause problems, purge everything you don't need.\par
\par
-Creating a script called mammal.\par
-Keywords mean are reserved attrubutions. Public is an access modyfier that is accessible to 'everything?'\par
\par
-Class is a classification of scripts that can then be used as objects.\par
\par
-Class Names are identifiers, such as 'Animal' or 'Mammal'.\par
\par
-The name of the script has to match the name of the class.\par
\par
-MonoBehaviour is an increadibly poorly optimized class, it is going to be replaced by a new set in the near future.\par
\par
-using UnityEngine; is an example of a namespace.\par
\par
-Start and Update are identifiers.\par
\par
-If you write good code, you shouldn't have to comment things... (Organization of largely complex projects may require it though.)\par
\par
-Remove the comments from you code as you finalize scripts.\par
\par
-Code block is like a paragraph.\par
\par
-//This is a comment, the computer won't read this.\par
\par
-The best code is written so that other people can understand it.\par
\par
-If what your doing is a function call, you must use void.\par
\par
-If there is a return call, you use something else.\par
\par
-Inheritance allows you to trim the fat out of long-lame-scripts.\par
\par
-A function call is a function that already exists that is being used through engine to perform the action.\par
\par
-Components are instances of scripts, not the scripts themselves. They are like manufatured products made by a factory.\par
\par
-Cookie cutters don't make cookie cutters, they make cookies. This is the basis of instancing in Unity.\par
\par
-The relevance of script-component instancing is how it is used in Memory.\par
\par
-GetComponent is a unity class. SpriteRenderer is a function, functions always have paranthesis. color modyfies SpriteRenderer. Alpha is set to transparent by default. = SkinColor; calls the variable.\par
void Start()\par
\{\par
GetComponent<SpriteRenderer>().color = SkinColor;\par
\}\par
\par
\par
-transform is a function. Rotate is a function.\par
void Update()\par
\{\par
transform.rotate(0, 100, 0);\par
\}\par
\par
\par
-Mammal script added, prints Hello, World!\par
\par
\par
Feb 4th, 2019\par
-A class is an object.\par
-Public is an access modifier. It is an aspect of unityEngine that inherits from unityEngine.\par
\par
-Class stands for Classification like in Mercades E-Class\par
-The colon : signifies that the class belongs to with something else.\par
public class Animal : MonoBehaviour \par
the above line of code causes 'Animal' to inherit from 'MonoBehaviour'\par
\par
-void means that there is nothing there. It is also a function type.\par
\par
-Remote example, class of remote that has functions as buttons.\par
\par
-Start starts when the game starts.\par
\par
-Update updates once every time a frame is pushed.\par
\par
-Curly brackets are containers for classes and functions.\par
\par
-Every function requires open and closed parenthesis, they are called function declarations.\par
\par
-The unity engine was built so that you don't have to make one from scratch. You are not a coder in this respect, you are a scripter.\par
\par
-We went over classes and inheritance. This is the fundimental concept of working in an engine like unity. Without inheritance, the unity engine would be irrelavant.\par
-\par
}
 